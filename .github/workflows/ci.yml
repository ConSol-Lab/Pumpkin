name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: dtolnay/rust-toolchain@stable
    - run: cargo test --release --no-fail-fast

  pumpkin-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install pytest
        run: pip install pytest
      - name: Install pumpkin-py
        run: pip install -e .
        working-directory: pumpkin-py
      - name: Run tests
        run: pytest
        working-directory: pumpkin-py

  wasm:
    name: Build pumpkin-solver (wasm32-unknown-emscripten)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # cache Cargo registry & your target/ dir
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # install Rust & add the Emscripten target
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup target add wasm32-unknown-emscripten

      # install Emscripten SDK & clang
      - run: |
          sudo apt-get update
          sudo apt-get install -y emscripten clang

      # build only pumpkin-solver for wasm
      - name: Build pumpkin-solver wasm
        run: |
          cargo build \
            --release \
            --target wasm32-unknown-emscripten \
            -p pumpkin-solver

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: dtolnay/rust-toolchain@stable
    - run: cargo doc --no-deps
    
  code_style:
    name: Code Style and Lints
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy, rustfmt
    - run: cargo +nightly fmt --check
    - run: cargo +nightly clippy --all-targets
    
  licenses:
    name: Dependency Licensing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: dtolnay/rust-toolchain@stable
    - run: ./scripts/deny.sh --ci
